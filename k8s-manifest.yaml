apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
        runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/emailservice:latest
        ports:
        - containerPort: 8080
        imagePullPolicy: Always
        env:
        - name: PORT
          value: "8080"
        readinessProbe:
          periodSeconds: 35
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 35
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: ENABLE_PROFILER
          value: "0"
        - name: JAEGER_SERVICE_ADDR
          value: "jaeger-collector:9411"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      securityContext:
       runAsUser: 1001
      containers:
        - name: server
          image: perform2019.azurecr.io/checkoutservice:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: JAEGER_SERVICE_ADDR
            value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/recommendationservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 35
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 35
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: ENABLE_PROFILER
          value: "0"
        - name: JAEGER_SERVICE_ADDR
          value: "jaeger-collector:9411"
        resources:
          requests:
            cpu: 80m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 550Mi
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
      - name: demo-registry
      securityContext:
       runAsUser: 1001
      containers:
        - name: server
          image: perform2019.azurecr.io/frontend:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "adservice:9555"
          - name: JAEGER_SERVICE_ADDR
            value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 300m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: paymentservice
      version: v1
  template:
    metadata:
      labels:
        app: paymentservice
        version: v1
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/paymentservice:memoryleak
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: JAEGER_SERVICE_ADDR
          value: "jaeger-collector:6832"
        - name: MEMORYLEAK
          value: "10"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  type: ClusterIP
  selector:
    app: paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/productcatalogservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        env:
          - name: JAEGER_SERVICE_ADDR
            value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 80m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
#        image: perform2019.azurecr.io/cartservice:0.1.3
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.1.3
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "redis-cart:6379"
        - name: PORT
          value: "7070"
        - name: LISTEN_ADDR
          value: "0.0.0.0"
        resources:
          requests:
            cpu: 80m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 512Mi
        readinessProbe:
          initialDelaySeconds: 60
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  type: ClusterIP
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      restartPolicy: Always
      # initContainers:
      # - name: wait-frontend
      #   image: docker.io/alpine:3.6
      #   command: ['sh', '-c', 'set -x;  apk add --no-cache curl &&
      #     until timeout -t 2 curl -f "http://${FRONTEND_ADDR}"; do
      #       echo "waiting for http://${FRONTEND_ADDR}";
      #       sleep 2;
      #     done;']
      #   env:
      #   - name: FRONTEND_ADDR
      #     value: "frontend:80"
      containers:
      - name: main
        image: perform2019.azurecr.io/loadgenerator:latest
        imagePullPolicy: Always
        env:
        - name: FRONTEND_ADDR
          value: "frontend:80"
        - name: USERS
          value: "10"
        resources:
          requests:
            cpu: 80m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/currencyservice:latest
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  type: ClusterIP
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/shippingservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        readinessProbe:
          periodSeconds: 35
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        env:
          - name: JAEGER_SERVICE_ADDR
            value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 80m
            memory: 64Mi
          limits:
            cpu: 150m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      imagePullSecrets:
      - name: demo-registry
      securityContext:
       runAsUser: 1001
      containers:
      - name: redis
        image: docker.io/redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 35
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 35
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 400Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  type: ClusterIP
  selector:
    app: redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      imagePullSecrets:
      - name: demo-registry
      terminationGracePeriodSeconds: 5
      securityContext:
       runAsUser: 1001
      containers:
      - name: server
        image: perform2019.azurecr.io/adservice:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9555
        imagePullPolicy: Always
        env:
        - name: PORT
          value: "9555"
        - name: JAEGER_SERVICE_ADDR
          value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 100m
            memory: 190Mi
          limits:
            cpu: 100m
            memory: 400Mi
        readinessProbe:
          initialDelaySeconds: 75
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 75
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
